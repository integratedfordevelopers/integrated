<script>
    !function($, Routing, JSON) {
/*
        window.Handlebars.registerHelper('select', function( value, options ){
            var $el = $('<select />').html( options.fn(this) );
            $el.find('[value="' + value + '"]').attr({'selected':'selected'});
            return $el.html();
        });
*/
        var Menu = function(element) {
            this.element = element;
        };

        Menu.prototype.load = function(data, success) {
            var element = this.element;
            var menu = this;

            fetch('{{ path('integrated_website_menu_render') }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: data
            })
                .then(response => response.json())
                .then(data => {
                    // success
                    element.dataset.options = data.options;
                    element.innerHTML = data.html;

                    element.querySelectorAll('.integrated-website-menu-list, .integrated-website-menu-item').forEach(item => {
                            if (item.dataset.json) {
                                console.log(JSON.parse(item.dataset.json));
                                item.data = JSON.parse(item.dataset.json);
                                console.log(item.data);
                                item.dataset.json = null;
                            }
                        }
                    );
/*
                    element.find('.integrated-website-menu-list').sortable({
                        tolerance: 'intersect',
                        items: '[data-action="integrated-website-menu-item-edit"]',
                        connectWith: '.integrated-website-menu-list',
                        placeholder: 'integrated-website-menu-placeholder',
                        cursor: 'move',
                        cursorAt: { top: 5, left: 10 },
                        scroll: false,
                        helper: function() {
                            return $('<div>').css('width', '20px').css('height', '10px');
                        }
                    });
*/

/*
                    element.find('.dropdown').droppable({
                        accept: '.integrated-website-menu-item',
                        tolerance: 'fit',
                        greedy: true
                    });
*/
                    if (success) {
                        success();
                    }
                });
        };

        Menu.prototype.refresh = function(id) {
            this.load(JSON.stringify({
                data: this.getData(id),
                options: this.getOptions()
            }));
        };

        Menu.prototype.getData = function(id) {
            let menu = this.element.closestChildren('.integrated-website-menu-list');
            let data = menu.item(0).data;

            data.children = [];

            menu.item(0).closestChildren('.integrated-website-menu-item').forEach(item => {
                var item = new Item(item);
                var result = item.getData(id);

                if (result) {
                    data.children.push(result);
                }
            });

            return data;
        };

        Menu.prototype.getOptions = function() {
            return this.element.data('options');
        };

        var Item = function(element) {
            this.element = element;
            this.menu = new Menu(this.element.closest('.integrated-website-menu'));
        };

        Item.prototype.getMenu = function() {
            return this.menu;
        };

        Item.prototype.getData = function(id, item) {
            item = item || this.element;

            var data = item.data;

            if (id && data.id == id || 'integrated-website-menu-item-edit' == item.dataset.action) {
                var items = item.closestChildren('.integrated-website-menu-item');

                if (items.length) {
                    var children = [];

                    for (var i = 0; i < items.length; i++) {
                        var result = this.getData(id, items[i]);

                        if (result) {
                            children.push(result);
                        }
                    }

                    data.children = children;
                }

                return data;
            }
        };

        Item.prototype.getValue = function(key) {
            return this.element.data('data')[key];
        };

        Item.prototype.update = function(json) {
            var data = this.element.data('data');

            $.each(json, function(key, value) {
                data[key] = value;
            });

            this.element.data('data', data);
            this.menu.refresh(data.id);
        };

        Item.prototype.remove = function() {
            this.element.remove();
            this.menu.refresh();
        };

        Integrated = {...Integrated, ...{
                Menu: {
                    create: function(element) {
                        return new Menu(element);
                    },
                    updateLinkType: function() {
                        if (jQuery('#typeLinkUri').prop("checked")) {
                            jQuery('#integrated-row-uri').show();
                            jQuery('#integrated-row-searchSelection').hide();
                            jQuery('#integrated-row-maxItems').hide();
                        }

                        if (jQuery('#typeLinkSearchSelection').prop("checked")) {
                            jQuery('#integrated-row-uri').hide();
                            jQuery('#integrated-row-searchSelection').show();
                            jQuery('#integrated-row-maxItems').show();
                        }
                    }
                }
            }};

        /*
        $.extend(true, Integrated, {
            Menu: {
                create: function(element) {
                    return new Menu(element);
                },
                updateLinkType: function() {
                    if (jQuery('#typeLinkUri').prop("checked")) {
                        jQuery('#integrated-row-uri').show();
                        jQuery('#integrated-row-searchSelection').hide();
                        jQuery('#integrated-row-maxItems').hide();
                    }

                    if (jQuery('#typeLinkSearchSelection').prop("checked")) {
                        jQuery('#integrated-row-uri').hide();
                        jQuery('#integrated-row-searchSelection').show();
                        jQuery('#integrated-row-maxItems').show();
                    }
                }
            }
        });

         */

        function init() {
            console.log(document.querySelector('.integrated-website-menu'));

            document.querySelectorAll('.integrated-website-menu').forEach(item => {
                    let menu = new Menu(item);
                    let script = item.querySelector('script[type="text/json"]');

                    menu.load(script.innerHTML);
                    /*
                    menu.load(script.innerHTML, function() {
                        console.log(script.parentNode);
                        script.parentNode.removeChild(script);
                    });
                     */
                }
            );

            document.querySelectorAll('.integrated-website-menu-item').forEach(item =>
                item.addEventListener('mouseover', function (e) {
                    $(this).addClass('open');
                })
            );

            document.querySelectorAll('.integrated-website-menu-item').forEach(item =>
                item.addEventListener('mouseout', function (e) {
                    $(this).removeClass('open');
                })
            );

            document.querySelectorAll('.integrated-website-menu').forEach(item =>
                item.addEventListener('click', function (e) {
                    e.preventDefault();
                    e.stopPropagation();

                    var item = new Item($(this));
                    var template = Handlebars.compile($('#integrated_website_template_modal_menu_edit').html());
                    var html = $(template({
                        typeLinkUri: true
                    }));

                    bootbox.dialog({
                        title: 'Add menu item',
                        message: html,
                        buttons: {
                            success: {
                                label: 'Save',
                                callback: function() {
                                    item.update({
                                        typeLink: $('input[name=typeLink]:checked').val(),
                                        name:     $('#name').val(),
                                        uri:      $('#uri').val(),
                                        searchSelection: $('#searchSelection').val(),
                                        maxItems: $('#maxItems').val()
                                    });
                                }
                            }
                        }
                    });

                    Integrated.Menu.updateLinkType();
                })
            );

            document.querySelectorAll('[data-action="integrated-website-menu-item-edit"]').forEach(item =>
                item.addEventListener('click', function (e) {
                    e.preventDefault();
                    e.stopPropagation();

                    var item = new Item($(this));
                    var template = Handlebars.compile($('#integrated_website_template_modal_menu_edit').html());

                    var html = $(template({
                        name:     item.getValue('name'),
                        uri:      item.getValue('uri'),
                        typeLinkUri: (typeof(item.getValue('typeLink')) == 'undefined' || item.getValue('typeLink') == 0) ? true : false,
                        typeLinkSearchSelection: (item.getValue('typeLink') == 1) ? true : false,
                        searchSelection: item.getValue('searchSelection'),
                        maxItems: item.getValue('maxItems')
                    }));

                    bootbox.dialog({
                        title: 'Edit menu item',
                        message: html,
                        buttons: {
                            danger: {
                                label: 'Remove',
                                className: 'btn-danger pull-left',
                                callback: function() {
                                    item.remove();
                                }
                            },
                            success: {
                                label: 'Save',
                                callback: function() {
                                    item.update({
                                        typeLink: $('input[name=typeLink]:checked').val(),
                                        name: $('#name').val(),
                                        uri:  $('#uri').val(),
                                        searchSelection: $('#searchSelection').val(),
                                        maxItems: $('#maxItems').val()
                                    });
                                }
                            }
                        }
                    });

                    Integrated.Menu.updateLinkType();
                })
            );
        }

        if (document.readyState != 'loading'){
            init();
        } else {
            document.addEventListener('DOMContentLoaded', init);
        }

        Element.prototype.closestChildren = function(selector) {
            var children = this.querySelectorAll(':scope > '+selector);

            if (children.length) {
                return children;
            }

            return this.querySelectorAll(selector);
            children = this.children;

            if (children.length) {
                return children.item(0).closestChildren(selector);
            }

            return {};
        };

    }(window.jQuery, window.Routing, JSON);

    var Integrated = Integrated || {};
</script>
