<svg class="integrated-svg-defs">
    <defs>
        <symbol id="integrated-icon-plus" viewBox="0 0 32 32">
            <path d="M31 12h-11v-11c0-0.552-0.448-1-1-1h-6c-0.552 0-1 0.448-1 1v11h-11c-0.552 0-1 0.448-1 1v6c0 0.552 0.448 1 1 1h11v11c0 0.552 0.448 1 1 1h6c0.552 0 1-0.448 1-1v-11h11c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1z"></path>
        </symbol>
        <symbol id="integrated-icon-edit" viewBox="0 0 384 448">
            <path d="M101 277l38 38-13 13h-14v-24h-24v-14zM204.5 179.5c2 1.75 1.5 5.25-0.75 7.5l-72.75 72.75c-2.25 2.25-5.75 2.75-7.5 0.75-2-1.75-1.5-5.25 0.75-7.5l72.75-72.75c2.25-2.25 5.75-2.75 7.5-0.75zM136 352l136-136-72-72-136 136v72h72zM288 200l23-23c9.25-9.25 9.25-24.75 0-34l-38-38c-9.25-9.25-24.75-9.25-34 0l-23 23zM384 104v240c0 39.75-32.25 72-72 72h-240c-39.75 0-72-32.25-72-72v-240c0-39.75 32.25-72 72-72h240c39.75 0 72 32.25 72 72z"></path>
        </symbol>
    </defs>
</svg>
<script>
    !function (Routing, JSON) {
        /**
         * @type object|null
         */
        var previousCall = null;

        var $blockTarget = null;

        /**
         * @param Element $element
         */
        var initGrid = function ($element) {
            $element.querySelectorAll('[data-block-type="row"]').forEach(item =>
                item.appendChild(createRowButtons())
            );

            $element.querySelectorAll('[data-block-type="column"]').forEach(item =>
                item.appendChild(createColumnButtons())
            );

            $element.appendChild(createColumnButtons());

            $element.querySelectorAll('[data-block-type="block"]').forEach(item => {
                item.parentNode.insertBefore(createBlockButtons(), item);
                //item.insertBefore(createBlockButtons(), item.firstChild);
            });

            document.querySelectorAll('.integrated-website-block-edit').forEach(item => {
                item.addEventListener('mouseover', function (e) {
                    e.target.parentNode.nextSibling.classList.add('integrated-block-hover');
                });
                item.addEventListener('mouseleave', function (e) {
                    e.target.parentNode.nextSibling.classList.remove('integrated-block-hover');
                });
            });
        };

        /**
         * @param Element $element
         */
        var initChannelBlockGrid = function($element) {
            $element.querySelectorAll('[data-block-type="channel"]').forEach(item =>
                item.insertBefore(createChannelBlockButtons(), item.firstChild)
            );
        };

        /**
         * @param {string} blockId
         * @param element  $before
         */
        var addBlock = function(blockId, $before) {
            var element = document.createElement('div');

            element.dataset.id = blockId;
            element.dataset.blockType = 'block';
            element.classList.add('integrated-website-sortable');

            $before.insertAdjacentElement('beforebegin', element);

            refreshBlock(element);
        };

        /**
         * @param element $block
         */
        var refreshBlock = function($block) {
            fetch('{{ path('integrated_block_block_show', {'id': 'block-id'}) }}'.replace('block-id', $block.dataset.id))
                .then(response => response.json())
                .then(data => {
                    $block.innerHTML = data.html;
                    if ($block.dataset.blockType == 'channel') {
                        $block.insertBefore(createChannelBlockButtons(), $block.firstChild);
                    } else {
                        $block.insertBefore(createBlockButtons(), $block.firstChild);
                    }
                });
        };

        /**
         * @return element
         */
        var createRow = function () {
            var element = document.createElement('div');

            element.dataset.blockType = 'row';
            element.classList.add('row');
            element.classList.add('integrated-website-sortable');

            return element;
        };

        /**
         * @param size
         */
        var createColumn = function(size) {
            var element = document.createElement('div');

            element.dataset.blockType = 'column';
            element.dataset.size = size;
            element.classList.add('integrated-website-col');
            element.classList.add('integrated-website-droppable');
            element.classList.add('col-sm-'+size);

            element.appendChild(createColumnButtons());

            initSortable(element);

            return element;
        };

        /**
         * @return Element
         */
        var createRowButtons = function () {
            var element = document.createElement('div');
            element.classList.add('row-buttons');
            element.innerHTML = '<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-cols-config" title="Configure columns"><span class="glyphicon glyphicon-wrench"></span></a>';

            return element;
        };

        /**
         * @return Element
         */
        var createColumnButtons = function () {
            var element = document.createElement('div');
            element.classList.add('integrated-block-buttons');
            element.innerHTML = '' +
                '<a href="javascript:;" class="integrated-block-button" data-action="integrated-website-block-add" title="{% trans %}Add block{% endtrans %}">' +
                '   <svg class="integrated-icon integrated-icon-plus"><use xlink:href="#integrated-icon-plus"></use></svg>' +
                '<span>{% trans %}Add block{% endtrans %}</span></a>' +
                '<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-textblock-add" title="Add textblock"><span class="glyphicon glyphicon-font"></span></a>' +
                '<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-cols-add" title="Add columns"><span class="glyphicon glyphicon-th-large"></span></a>' +
                '';

            return element;
        };

        /**
         * @return Element
         */
        var createBlockButtons = function() {
            var element = document.createElement('div');
            element.classList.add('integrated-block-buttons');
            //element.classList.add('integrated-website-block-options');
            element.innerHTML =
                '<a href="javascript:;" class="integrated-block-button" data-action="integrated-website-block-add" title="{% trans %}Add block{% endtrans %}">' +
                '   <svg class="integrated-icon integrated-icon-plus"><use xlink:href="#integrated-icon-plus"></use></svg>' +
                '<span class="integrated-block-button-label">{% trans %}Add block{% endtrans %}</a></span>' +

                '<a href="javascript:;" class="integrated-block-button integrated-website-block-edit" data-action="integrated-website-block-edit" title="{% trans %}Edit block{% endtrans %}">' +
                '   <svg class="integrated-icon integrated-icon-edit"><use xlink:href="#integrated-icon-edit"></use></svg>' +
                '<span class="integrated-block-button-label">{% trans %}Edit block{% endtrans %}</a></span>' +

                //'<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-block-edit" title="Edit block"><span class="glyphicon glyphicon-pencil"></span></a>' +
                '<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-block-remove" title="Remove block"><span class="glyphicon glyphicon-remove"></span></a>';

            return element;
        };

        /**
         * @return Element
         */
        var createChannelBlockButtons = function() {
            let element = document.createElement('div');
            element.classList.add('integrated-website-block-options');
            element.innerHTML =
                '<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-block-edit" title="Edit block"><span class="glyphicon glyphicon-pencil"></span></a>';

            return element;
        };

        var showLoader = function() {
            let element = document.createElement('div');

            element.innerHTML = '<div id="integrated-loader"><div id="integrated-loader-spinner"></div></div></div>';
            document.querySelector('body').insertAdjacentElement('afterend', element);
        };

        var hideLoader = function() {
            let element = document.querySelector('#integrated-loader');

            element.parentNode.removeChild(element);
        };

        var addBlockModalTemplateHTML = function(data) {
            var output = '<div>' +
                '   <div id="add_block_filters" class="integrated-control-row">' +
                '       <form id="add_block_filters_form" action="{{ path('integrated_block_block_index', { '_format': 'json', 'limit': 10}) }}">' +
                '           <div class="">' +
                '               <div class="dropdown">' +
                '                   <button class="integrated-button integrated-button-dropdown" data-integrated-dropdown="integrated-createblock-dropdown" >{% trans %}Create block{% endtrans %}' +
                '                       <div class="integrated-button-icon">' +
                '                           <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16"><path d="M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"/></svg>' +
                '                       </div>\n' +
                '                   </button>\n' +
                '                   <ul class="integrated-website-toolbar-dropdown integrated-block-filter" id="integrated-createblock-dropdown">\n' +
                    {% for metadata in integrated_find_block_types() if 'InlineTextBlock' not in metadata.class %}
                '                       <li role="presentation">\n' +
                '                               <a href="{{ path('integrated_block_block_new', { '_format': 'iframe.html', 'class': metadata.class} ) }}" data-action="integrated-website-block-new">{{ metadata.type|default(metadata.class) }}</a>' +
                '                           </li>\n' +
                    {% endfor %}
                '                        </ul>\n' +
                '                    </div>\n' +
                '               </div>\n' +
                '               <div class="">\n'+
                '                   <select class="integrated-form-control integrated-block-filter" name="integrated_block_filter[type][]" id="integrated_block_filter_type">\n'+
                '                       <option value="">{% trans %}Filter type{% endtrans %}</option>\n' +
                `                        ${data.filters.type.map(type => `<option value="${type.value}" ${type.value == data.type ? "selected" : ""}>${type.label}</option>`).join('')}`+
                '                        </select>\n'+
                '                    </div>\n'+
                '                    <div class="">\n'+
                '                        <div class="input-group">\n'+
                `                            <input type="text" value="${data.q}" class="integrated-form-control" name="integrated_block_filter[q]" id="integrated_block_filter_q" placeholder="{% trans %}Search{% endtrans %}...">\n`+
                '                        </div>\n'+
                '                    </div>\n'+
                '                    <div class="">\n'+
                '                        <select class="integrated-form-control integrated-block-filter" name="integrated_block_filter[channels][]" id="integrated_block_filter_channels">\n'+
                '                            <option value="">{% trans %}Filter channel{% endtrans %}</option>\n'+
                `                            ${data.filters.channels.map(channel => `<option value="${channel.value}" ${channel.value == data.channel ? "selected" : ""}>${channel.label}</option>`).join('')}`+
                '                        </select>\n'+
                '                    </div>\n'+
                '            </form>\n' +
                '        </div>\n' +
                '        <div id="add_block_results">\n' +
                `           ${data.blocks.map(block => `<div class="row form-group">
                                <div class="col-sm-8">
                                    <b>${block.title}</b>
                                    <p>${block.type}</p>
                                </div><div class="col-sm-4"><a href="javascript:;" data-action="integrated-website-block-choose" data-id="${block.id}" class="btn btn-default pull-right">Choose</a></div></div>`).join('')}`+
                '        </div>\n' +
                '        <div class="row form-group">\n' +
                '            <div class="col-sm-12">\n';

            if (data.pagination.pageCount > 0) {
                output = output + '<ul class="pagination" id="add_block_pagination">\n';

                if (data.pagination.previous) {
                    output = output + `<li><a href="${data.pagination.previous.href}">&laquo;</a></li>`;
                } else {
                    output = output + `<li class="disabled"><span>&laquo;</span></li>`;
                }

                for (var key in data.pagination.pages) {
                    page = data.pagination.pages[key];
                    if (data.pagination.page == key) {
                        output = output + `<li class="active disabled"><a href="${page.href}">${key}</a></li>`;
                    } else {
                        output = output + `<li><a href="${page.href}">${key}</a></li>`;
                    }
                };

                if (data.pagination.next) {
                    output = output + `<li><a href="${data.pagination.next.href}">&laquo;</a></li>`;
                } else {
                    output = output + `<li class="disabled"><span>&raquo;</span></li>`;
                }

                output = output + '</ul>\n';
            }

            output = output + '</div>\n' +
            '        </div>\n' +
            '    </div>\n';

            return output;
        }

        /**
         * Init grid buttons on page load
         */
        function init() {
            document.querySelectorAll('.integrated-website-grid').forEach(item =>
                initGrid(item)
            );

            document.querySelectorAll('.integrated-website-channel-block-grid').forEach(item =>
                initChannelBlockGrid(item)
            );

            /**
             * Handle add block button
             */
            document.querySelectorAll('[data-action="integrated-website-block-add"]').forEach(item =>
                item.addEventListener('click', function(e) {
                    e.preventDefault();

                    showLoader();

                    $blockTarget = item.parentNode;

                    fetch('{{ path('integrated_block_block_index', { '_format': 'json', 'limit': 10}) }}')
                        .then(response => response.json())
                        .then(data => {
                            // success
                            data.type = '';
                            data.q = '';
                            data.channels = '';

                            Integrated.showModal('{% trans %}Add block{% endtrans %}', addBlockModalTemplateHTML(data));

                            hideLoader();
                        });
                })
            );
        }

        if (document.readyState != 'loading'){
            init();
        } else {
            document.addEventListener('DOMContentLoaded', init);
        }

        /**
         * Handle choose block button
         */
        document.querySelectorAll('body').forEach(item =>
            item.addEventListener('click', function(e) {
                if (e.target.dataset.action != 'integrated-website-block-choose') {
                    return true;
                }
                addBlock(e.target.dataset.id, $blockTarget);

                Integrated.hideModal();
            })
        );

        /**
         * Handle remove block button
         */
        /*
        $(document).on('click', '[data-action="integrated-website-block-remove"]', function(e) {
            e.preventDefault();

            if (confirm('Are you sure?')) {
                $(this).closest('[data-block-type="block"]').remove();
            }
        });
        */

        /**
         * Handle edit block button
         */
        /*
        $(document).on('click', '[data-action="integrated-website-block-edit"]', function(e) {
            e.preventDefault();

            $blockTarget = null;

            var blockId = $(this).closest('[data-block-type="block"],[data-block-type="channel"]').data('id');
            createIframe(Routing.generate('integrated_block_block_edit', { 'id': blockId, '_format': 'iframe.html'}), 'Edit block');
        });
        */

        /**
         * Handle new block button
         */
        /*
        $(document).on('click', '[data-action="integrated-website-block-new"]', function(e) {
            e.preventDefault();

            $('.modal').modal('hide');
            createIframe($(this).attr('href'), 'Add block');
        });
         */

        /**
         * Handle new channel block button
         */
        /*
        $(document).on('click', '[data-action="integrated-website-block-new-channel-block"]', function(e) {
            e.preventDefault();

            button = e.target;
            id = $(button).data('id');
            name = $(button).data('name');
            className = $(button).data('class');
            csrfToken = $(button).data('csrf-token');

            $blockTarget = $('#create-channel-block-'+id);

            $.post(
                Routing.generate('integrated_block_block_new_channel_block'),
                { 'id': id, 'name': name, 'class': className, 'csrf_token': csrfToken },
                function() {
                    $('.modal').modal('hide');
                    createIframe(Routing.generate('integrated_block_block_edit', { 'id': $(button).data('id'), '_format': 'iframe.html'}), 'Edit block');
                }
            );
        });
        */

        /**
         * Handle new textblock button
         */
        /*
        $(document).on('click', '[data-action="integrated-website-textblock-add"]', function(e) {
            e.preventDefault();

            $blockTarget = $(this).parent();

            var pageId = $('[data-action="integrated-website-page-save"]').data('id');

            $('.modal').modal('hide');

            createIframe(Routing.generate('integrated_block_inline_text_block_create', { 'id': pageId}), 'New block');
        });
        */

        /**
         * @param url
         * @param title
         */
        var createIframe = function(url, title) {
            var iFrame = $('<iframe frameborder="0" style="width: 100%; max-height:100%; display: auto;">')
                .attr('src', url)
                .on('load', function(e){
                    var windowHeight = $(window).height() - 160;
                    var iframeHeight = e.target.contentWindow.document.body.scrollHeight;

                    $(this).height(windowHeight > iframeHeight && iframeHeight ? iframeHeight : windowHeight);

                    $(this).show();
                    $(this).siblings('.iframe-loading').hide();

                    //handle cancel button in iframe
                    $(this).contents().find('.integrated-cancel-button').click(function () {
                        $('.modal').modal('hide');
                    });
                });

            var dialog = bootbox.dialog({
                title: title,
                message: $('<div>')
                    .append('<div class="text-center iframe-loading"><i class="fa fa-spin fa-spinner"></i> Loading...</div>')
                    .append(iFrame),
                size: 'large'
            });
        };

        /**
         * @param $element
         */
        var initSortable = function($element) {
            $element.sortable({
                connectWith: '.integrated-website-droppable',
                placeholder: 'integrated-website-item-placeholder',
                items: '.integrated-website-sortable',
                scroll: false,
                opacity: 0.7,
                cursor: 'move',
                cursorAt: { top: 20, left: 20 },
                tolerance: 'pointer',
                helper: function(e, helper) {
                    return helper.clone().css({'width': '300px'});
                },
                stop: function(e, ui) {
                    var $item = $(ui.item);
                    //buttons should always come behind
                    $item.after($item.prev('.integrated-block-buttons'));
                }
            });
        };

        /**
         * Handle block edit in iframe
         */
        document.addEventListener('block-added', function (e) {
            $('.modal').modal('hide');

            if ($blockTarget) {
                //new block inserted
                addBlock(e.detail, $blockTarget);
            } else {
                //update block
                $('[data-id="' + e.detail + '"]').each(function () {
                    refreshBlock($(this));
                });
            }
        }, false);


        /**
         * Add columns
         */
        /*
        $(document).on('click', '[data-action="integrated-website-cols-add"]', function(e) {
            e.preventDefault();

            var total = parseInt(prompt('How many columns do you want?'));

            if (total) {
                var $row = createRow();

                for (var i = 0; i < total; i++) {
                    var size = parseInt(prompt('Size of column ' + (i+1) + '?'));

                    if (size) {
                        $row.append(createColumn(size));
                    }
                }

                $row.append(createRowButtons());

                $(this).parent().before($row);
            }
        });
        */

        /**
         * Update row and columns
         */
        /*
        $(document).on('click', '[data-action="integrated-website-cols-config"]', function(e) {
            e.preventDefault();

            var $row = $(this).closest('[data-block-type="row"]');
            var $oldColumns = $row.children('[data-block-type="column"]');

            var total = parseInt(prompt('How many columns do you want?', $oldColumns.length));

            if (total) {
                $row.children('.row-buttons').remove();

                for (var i = 0; i < total; i++) {
                    var oldSize = '';

                    if ($oldColumns[i]) {
                        oldSize = $($oldColumns[i]).data('size');
                    }

                    var size = parseInt(prompt('Size of column ' + (i+1) + '?', oldSize));

                    if (size) {
                        if ($oldColumns[i]) {
                            $($oldColumns[i]).attr('class', 'integrated-website-col integrated-website-droppable col-sm-' + size).data('size', size);
                        } else {
                            $row.append(createColumn(size));
                        }
                    }
                }

                //if there were more columns, remove the last columns
                $oldColumns
                    .slice(i)
                    .sortable('destroy')
                    .remove();

                $row.append(createRowButtons());
            } else {
                //no count, so remove entire row
                $row.remove();
            }
        });
        */

        /**
         * Make grid sortable
         */
        //initSortable($('.integrated-website-droppable'));

        /**
         * Modal eventlisteners
         */

        /**
         * Handle block edit in iframe
         */
        document.addEventListener('change', function (e) {
            if (!e.target.classList.contains('integrated-block-filter')) {
                return;
            }

            refreshBlockData(document.querySelector('#add_block_filters_form'));
            return false;
        });

//        $(document).on('change', '#add_block_filters_form input, #add_block_filters_form select', function() {
        //          $('#add_block_filters_form').submit();
        //    });



        /*
        $(document).on('change', '#add_block_filters_form input, #add_block_filters_form select', function() {
            $('#add_block_filters_form').submit();
        });

        $(document).on('submit', '#add_block_filters_form', function(e) {
            e.preventDefault();

            refreshBlockData($(this).attr('action') + '&' + $(this).serialize());

            return false;
        });


        $(document).on('click', '#add_block_pagination a', function(e) {
            e.preventDefault();

            refreshBlockData($(this).attr('href'));

            return false;
        });

         */

        function refreshBlockData(form) {
            document.querySelector('#add_block_results').innerHTML = 'Loading blocks...';

            if (previousCall !== null){
                //previousCall.cancel();
                //previousCall = null;
            }

            previousCall = fetch(form.action, {
                method: 'post',
                body: new URLSearchParams(new FormData(form)),
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                }
            })
            .then(response => response.json())
            .then(data => {
                data.type = document.querySelector('[name="integrated_block_filter[type][]"] option:checked').value;
                data.q = document.querySelector('[name="integrated_block_filter[q]"]').value;
                data.channels = document.querySelector('[name="integrated_block_filter[channels][]"] option:checked').value;

                document.querySelector('#add_block_results').parentElement.outerHTML = addBlockModalTemplateHTML(data);

                previousCall = null;
            });

            return;
            $.ajax({
                url: url,
                dataType: 'json',
                success: function(data) {

                    data.type = $('[name="integrated_block_filter[type][]"]').val();
                    data.q = $('[name="integrated_block_filter[q]"]').val();
                    data.channels = $('[name="integrated_block_filter[channels][]"]').val();

                    var template = Handlebars.compile($('#integrated_website_template_modal_block_add').html());

                    var html = $(template(data));

                    $('#add_block_results').parent().replaceWith(html);
                }
            });
        }
    } (window.Routing, JSON);

    var Integrated = Integrated || {};
</script>
