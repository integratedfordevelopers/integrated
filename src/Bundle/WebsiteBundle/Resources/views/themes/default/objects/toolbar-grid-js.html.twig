<script>
    !function ($, Routing, JSON) {
        /**
         * @type object|null
         */
        var previousCall = null;

        var $blockTarget = null;

        /**
         * @param Element $element
         */
        var initGrid = function ($element) {
            $element.querySelectorAll('[data-block-type="row"]').forEach(item =>
                item.appendChild(createRowButtons())
            );

            $element.querySelectorAll('[data-block-type="column"]').forEach(item =>
                item.appendChild(createColumnButtons())
            );

            $element.appendChild(createColumnButtons());

            $element.querySelectorAll('[data-block-type="block"]').forEach(item =>
                item.insertBefore(createBlockButtons(), item.firstChild)
            );
        };

        /**
         * @param Element $element
         */
        var initChannelBlockGrid = function($element) {
            $element.querySelectorAll('[data-block-type="channel"]').forEach(item =>
                item.insertBefore(createChannelBlockButtons(), item.firstChild)
            );
        };

        /**
         * @param {string} blockId
         * @param {jQuery} $before
         */
        var addBlock = function(blockId, $before) {
            var $block = $('<div>')
                .attr('data-id', blockId)
                .attr('data-block-type', 'block')
                .addClass('integrated-website-sortable');

            $before.before($block);

            refreshBlock($block);
        };

        /**
         * @param {jQuery} $block
         */
        var refreshBlock = function($block) {
            $.ajax({
                url: Routing.generate('integrated_block_block_show', { 'id': $block.data('id') }),
                dataType: 'json',
                success: function(data) {
                    $block.html(data.html);
                    if ($block.data('block-type') == 'channel') {
                        $block.prepend(createChannelBlockButtons());
                    } else {
                        $block.prepend(createBlockButtons());
                    }
                },
                error: function (result) {
                    // @todo error handling (INTEGRATED-420)
                    alert('An error occurred rendering the block!');
                    console.log(result.responseText);
                }
            });
        };
        /**
         * @return {jQuery}
         */
        var createRow = function () {
            return $('<div>')
                .addClass('row integrated-website-sortable')
                .attr('data-block-type', 'row');
        };

        /**
         * @param size
         */
        var createColumn = function(size) {
            var $element = $('<div>')
                .addClass('integrated-website-col integrated-website-droppable col-sm-' + size)
                .attr('data-block-type', 'column')
                .data('size', size)
                .append(createColumnButtons());

            initSortable($element);

            return $element;
        };

        /**
         * @return Element
         */
        var createRowButtons = function () {
            var element = document.createElement('div');
            element.innerHTML = 'POEP POEP POEP<div class="row-buttons"><a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-cols-config" title="Configure columns"><span class="glyphicon glyphicon-wrench"></span></a></div>';

            return element;
        };

        /**
         * @return Element
         */
        var createColumnButtons = function () {
            var element = document.createElement('div');
            element.innerHTML = '<div class="block-buttons">' +
                '<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-block-add" title="Add block">ADD<span class="glyphicon glyphicon-plus"></span></a>' +
                '<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-textblock-add" title="Add textblock"><span class="glyphicon glyphicon-font"></span></a>' +
                '<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-cols-add" title="Add columns"><span class="glyphicon glyphicon-th-large"></span></a>' +
                '</div>';

            return element;
        };

        /**
         * @return Element
         */
        var createBlockButtons = function() {
            var element = document.createElement('div');
            element.innerHTML = 'POEP2 POEP2 POEP2<div class="integrated-website-block-options">' +
                '<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-block-edit" title="Edit block"><span class="glyphicon glyphicon-pencil"></span></a>' +
                '<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-block-remove" title="Remove block"><span class="glyphicon glyphicon-remove"></span></a>' +
                '</div>';

            return element;
        };

        /**
         * @return Element
         */
        var createChannelBlockButtons = function() {
            var element = document.createElement('div');
            element.innerHTML = 'POEP3 POEP3 POEP3<div class="integrated-website-block-options">' +
                '<a href="javascript:;" class="integrated-website-helper-icon" data-action="integrated-website-block-edit" title="Edit block"><span class="glyphicon glyphicon-pencil"></span></a>' +
                '</div>';

            return element;
        };

        var showLoader = function() {
            var element = document.createElement('div');
            element.innerHTML = '<div id="integrated-loader"><div id="integrated-loader-spinner"></div></div></div>';
            document.querySelector('body').insertAdjacentElement('afterend', element);
        };

        var hideLoader = function() {
            var element = document.querySelector('#integrated-loader');
            element.parentNode.removeChild(element);
        };

        var addBlockModalTemplateHTML = function(data) {
            var type = 'yo';
            console.log(data.filters);
            return '    <div>' +
                '        <div id="add_block_filters" class="row">' +
                '            <form id="add_block_filters_form" action="{{ path('integrated_block_block_index', { '_format': 'json', 'limit': 10}) }}">' +
            '                    <div class="col-sm-3">' +
            '                        <div class="dropdown">' +
            '                            <button class="btn btn-default" type="button" data-toggle="dropdown">{% trans %}New block{% endtrans %}' +
            '                                <span class="caret"></span>\n' +
            '                            </button>\n' +
            '                            <ul class="dropdown-menu">\n' +
            {% for metadata in integrated_find_block_types() if 'InlineTextBlock' not in metadata.class %}
            '                                    <li role="presentation">\n' +
            '                                        <a href="{{ path('integrated_block_block_new', { '_format': 'iframe.html', 'class': metadata.class} ) }}" data-action="integrated-website-block-new">{{ metadata.type|default(metadata.class) }}</a>' +
            '                                    </li>\n' +
            {% endfor %}
            '                            </ul>\n' +
            '                        </div>\n' +
            '                    </div>\n' +
            '                    <div class="col-sm-3">\n'+
            '                        <select class="form-control" name="integrated_block_filter[type][]">\n'+
            '                            <option value="">{% trans %}All types{% endtrans %}</option>\n' +
            {% verbatim %}
            `                            ${data.filters.type.map(type => `<option value="${type.value}" ${type.value == type ? "selected" : ""}>${type.label}</option>`)}`+
            {% endverbatim %}
            '                        </select>\n'+
            '                    </div>\n'+
            '                    <div class="col-sm-3">\n'+
            '                        <div class="input-group">\n'+
            '                            <input type="text" value="${data.q}" class="form-control" name="integrated_block_filter[q]" placeholder="{% trans %}Search{% endtrans %}...">\n'+
            '                        </div>\n'+
            '                    </div>\n'+
            '                    <div class="col-sm-3">\n'+
            '                        <select class="form-control" name="integrated_block_filter[channels][]">\n'+
            '                            <option value="">{% trans %}Channel usage{% endtrans %}</option>\n'+
            {% verbatim %}
            `                            ${data.filters.channels.map(channel => `<option value="${channel.value}" ${channel.value == channel ? "selected" : ""}>${channel.label}</option>`)}`+
            {% endverbatim %}
            '                        </select>\n'+
            '                    </div>\n'+
            '            </form>\n' +
            '        </div>\n' +
            '\n' +
            '        <div id="add_block_results">\n' +
            {% verbatim %}
'                {{#each blocks}}\n'+
'                    <div class="row form-group">\n'+
'                        <div class="col-sm-8">\n'+
'                            <b>{{ title }}</b>\n'+
'                            <p>{{ type }}</p>\n'+
'                        </div>\n'+
'                        <div class="col-sm-4">\n'+
'                            <a href="javascript:;" data-action="integrated-website-block-choose" data-id="{{ id }}" class="btn btn-default pull-right">Choose</a>\n'+
'                        </div>\n'+
'                    </div>\n'+
'                {{/each}}\n'+
            {% endverbatim %}
            '        </div>\n' +
            '\n' +
            '        <div class="row form-group">\n' +
            '            <div class="col-sm-12">\n' +
            {% verbatim %}
'                    {{#hasPages pagination.pageCount}}\n'+
'                        <ul class="pagination" id="add_block_pagination">\n'+
'                            {{#if pagination.previous}}\n'+
'                                <li>\n'+
'                                    <a href="{{pagination.previous.href}}">&laquo;</a>\n'+
'                                </li>\n'+
'                            {{else}}\n'+
'                                <li class="disabled">\n'+
'                                    <span>&laquo;</span>\n'+
'                                </li>\n'+
'                            {{/if}}\n'+
'\n'+
'                            {{#each pagination.pages }}\n'+
'                                <li {{#equals @key ../pagination.page }}class="active disabled"{{/equals}}>\n'+
'                                    <a href="{{href}}">{{ @key }}</a>\n'+
'                                </li>\n'+
'                            {{/each}}\n'+
'\n'+
'                            {{#if pagination.next}}\n'+
'                                <li>\n'+
'                                    <a href="{{pagination.next.href}}">&raquo;</a>\n'+
'                                </li>\n'+
'                            {{else}}\n'+
'                                <li class="disabled">\n'+
'                                    <span>&raquo;</span>\n'+
'                                </li>\n'+
'                            {{/if}}\n'+
'                        </ul>\n'+
'                    {{/hasPages}}\n'+
            {% endverbatim %}
            '            </div>\n' +
            '        </div>\n' +
            '    </div>\n';
        }

        /**
         * Init grid buttons on page load
         */
        function init() {
            document.querySelectorAll('.integrated-website-grid').forEach(item =>
                initGrid(item)
            );

            document.querySelectorAll('.integrated-website-channel-block-grid').forEach(item =>
                initChannelBlockGrid(item)
            );

            /**
             * Handle add block button
             */
            document.querySelectorAll('[data-action="integrated-website-block-add"]').forEach(item =>
                item.addEventListener('click', function(e) {
                    e.preventDefault();

                    showLoader();

                    $blockTarget = item.parentNode;


                    fetch('{{ path('integrated_block_block_index', { '_format': 'json', 'limit': 10}) }}')
                        .then(response => response.json())
                        .then(data => {
                            // success
                            console.log(data);
                            console.log(data.filters);
                            //var template = Handlebars.compile($('#integrated_website_template_modal_block_add').html());

                            var dialog = bootbox.dialog({
                                title: 'Add block',
                                message: addBlockModalTemplateHTML(data) //$(template(data))
                            });

                            hideLoader();
                        });
                })
            );
        }

        if (document.readyState != 'loading'){
            init();
        } else {
            document.addEventListener('DOMContentLoaded', init);
        }

        /**
         * Handle choose block button
         */
        $(document).on('click', '[data-action="integrated-website-block-choose"]', function(e) {
            addBlock($(this).attr('data-id'), $blockTarget);

            $('.modal').modal('hide');
        });

        /**
         * Handle remove block button
         */
        $(document).on('click', '[data-action="integrated-website-block-remove"]', function(e) {
            e.preventDefault();

            if (confirm('Are you sure?')) {
                $(this).closest('[data-block-type="block"]').remove();
            }
        });

        /**
         * Handle edit block button
         */
        $(document).on('click', '[data-action="integrated-website-block-edit"]', function(e) {
            e.preventDefault();

            $blockTarget = null;

            var blockId = $(this).closest('[data-block-type="block"],[data-block-type="channel"]').data('id');
            createIframe(Routing.generate('integrated_block_block_edit', { 'id': blockId, '_format': 'iframe.html'}), 'Edit block');
        });

        /**
         * Handle new block button
         */
        $(document).on('click', '[data-action="integrated-website-block-new"]', function(e) {
            e.preventDefault();

            $('.modal').modal('hide');
            createIframe($(this).attr('href'), 'Add block');
        });

        /**
         * Handle new channel block button
         */
        $(document).on('click', '[data-action="integrated-website-block-new-channel-block"]', function(e) {
            e.preventDefault();

            button = e.target;
            id = $(button).data('id');
            name = $(button).data('name');
            className = $(button).data('class');
            csrfToken = $(button).data('csrf-token');

            $blockTarget = $('#create-channel-block-'+id);

            $.post(
                Routing.generate('integrated_block_block_new_channel_block'),
                { 'id': id, 'name': name, 'class': className, 'csrf_token': csrfToken },
                function() {
                    $('.modal').modal('hide');
                    createIframe(Routing.generate('integrated_block_block_edit', { 'id': $(button).data('id'), '_format': 'iframe.html'}), 'Edit block');
                }
            );
        });

        /**
         * Handle new textblock button
         */
        $(document).on('click', '[data-action="integrated-website-textblock-add"]', function(e) {
            e.preventDefault();

            $blockTarget = $(this).parent();

            var pageId = $('[data-action="integrated-website-page-save"]').data('id');

            $('.modal').modal('hide');

            createIframe(Routing.generate('integrated_block_inline_text_block_create', { 'id': pageId}), 'New block');
        });

        /**
         * @param url
         * @param title
         */
        var createIframe = function(url, title) {
            var iFrame = $('<iframe frameborder="0" style="width: 100%; max-height:100%; display: auto;">')
                .attr('src', url)
                .on('load', function(e){
                    var windowHeight = $(window).height() - 160;
                    var iframeHeight = e.target.contentWindow.document.body.scrollHeight;

                    $(this).height(windowHeight > iframeHeight && iframeHeight ? iframeHeight : windowHeight);

                    $(this).show();
                    $(this).siblings('.iframe-loading').hide();

                    //handle cancel button in iframe
                    $(this).contents().find('.integrated-cancel-button').click(function () {
                        $('.modal').modal('hide');
                    });
                });

            var dialog = bootbox.dialog({
                title: title,
                message: $('<div>')
                    .append('<div class="text-center iframe-loading"><i class="fa fa-spin fa-spinner"></i> Loading...</div>')
                    .append(iFrame),
                size: 'large'
            });
        };

        /**
         * @param $element
         */
        var initSortable = function($element) {
            $element.sortable({
                connectWith: '.integrated-website-droppable',
                placeholder: 'integrated-website-item-placeholder',
                items: '.integrated-website-sortable',
                scroll: false,
                opacity: 0.7,
                cursor: 'move',
                cursorAt: { top: 20, left: 20 },
                tolerance: 'pointer',
                helper: function(e, helper) {
                    return helper.clone().css({'width': '300px'});
                },
                stop: function(e, ui) {
                    var $item = $(ui.item);
                    //buttons should always come behind
                    $item.after($item.prev('.block-buttons'));
                }
            });
        };

        /**
         * Handle block edit in iframe
         */
        document.addEventListener('block-added', function (e) {
            $('.modal').modal('hide');

            if ($blockTarget) {
                //new block inserted
                addBlock(e.detail, $blockTarget);
            } else {
                //update block
                $('[data-id="' + e.detail + '"]').each(function () {
                    refreshBlock($(this));
                });
            }
        }, false);

        /**
         * Add columns
         */
        $(document).on('click', '[data-action="integrated-website-cols-add"]', function(e) {
            e.preventDefault();

            var total = parseInt(prompt('How many columns do you want?'));

            if (total) {
                var $row = createRow();

                for (var i = 0; i < total; i++) {
                    var size = parseInt(prompt('Size of column ' + (i+1) + '?'));

                    if (size) {
                        $row.append(createColumn(size));
                    }
                }

                $row.append(createRowButtons());

                $(this).parent().before($row);
            }
        });

        /**
         * Update row and columns
         */
        $(document).on('click', '[data-action="integrated-website-cols-config"]', function(e) {
            e.preventDefault();

            var $row = $(this).closest('[data-block-type="row"]');
            var $oldColumns = $row.children('[data-block-type="column"]');

            var total = parseInt(prompt('How many columns do you want?', $oldColumns.length));

            if (total) {
                $row.children('.row-buttons').remove();

                for (var i = 0; i < total; i++) {
                    var oldSize = '';

                    if ($oldColumns[i]) {
                        oldSize = $($oldColumns[i]).data('size');
                    }

                    var size = parseInt(prompt('Size of column ' + (i+1) + '?', oldSize));

                    if (size) {
                        if ($oldColumns[i]) {
                            $($oldColumns[i]).attr('class', 'integrated-website-col integrated-website-droppable col-sm-' + size).data('size', size);
                        } else {
                            $row.append(createColumn(size));
                        }
                    }
                }

                //if there were more columns, remove the last columns
                $oldColumns
                    .slice(i)
                    .sortable('destroy')
                    .remove();

                $row.append(createRowButtons());
            } else {
                //no count, so remove entire row
                $row.remove();
            }
        });

        /**
         * Make grid sortable
         */
        initSortable($('.integrated-website-droppable'));

        /**
         * Modal eventlisteners
         */

        $(document).on('change', '#add_block_filters_form input, #add_block_filters_form select', function() {
            $('#add_block_filters_form').submit();
        });

        $(document).on('submit', '#add_block_filters_form', function(e) {
            e.preventDefault();

            refreshBlockData($(this).attr('action') + '&' + $(this).serialize());

            return false;
        });


        $(document).on('click', '#add_block_pagination a', function(e) {
            e.preventDefault();

            refreshBlockData($(this).attr('href'));

            return false;
        });

        function refreshBlockData(url) {
            $('#add_block_results').html('Loading blocks...');

            if(previousCall !== null){
                previousCall.abort();
                previousCall = null;
            }

            previousCall = $.ajax({
                url: url,
                dataType: 'json',
                success: function(data) {

                    data.type = $('[name="integrated_block_filter[type][]"]').val();
                    data.q = $('[name="integrated_block_filter[q]"]').val();
                    data.channels = $('[name="integrated_block_filter[channels][]"]').val();

                    var template = Handlebars.compile($('#integrated_website_template_modal_block_add').html());

                    var html = $(template(data));

                    $('#add_block_results').parent().replaceWith(html);
                }
            });
        }
    } (window.jQuery, window.Routing, JSON);

    var Integrated = Integrated || {};
</script>
